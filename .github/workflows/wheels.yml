name: build
on:
  [push, pull_request]

permissions:
  contents: write

jobs:

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: wheel
          condarc: |
            channels:
              - conda-forge
              - pytorch
          create-args: >-
            c-compiler
            fortran-compiler
            python
            git
            python-build
            pkg-config
            cffi
            numpy
            meson-python
            setuptools
            wheel
            xtb=6.7.1
      - uses: actions/checkout@v4
      - run: python -m build --sdist -n ${{ env.SETUP_ARGS }}
        env:
          SETUP_ARGS: >-
            -Csetup-args=-Dxtb-6.7.1:la_backend=netlib
            -Csetup-args=-Dmctc-lib:json=disabled
        shell: micromamba-shell {0}
      - uses: actions/upload-artifact@v4
        with:
          name: xtbwheel-sdist.tar.gz
          path: dist/xtbwheel-*.tar.gz
          retention-days: 5

  wheels:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python: ['9', '10', '11', '12', '13']
        platform:
          # - ubuntu-24.04-arm  # linux, arm64  Cannot for private repositories
          - ubuntu-latest     # linux, x86_64
          - macos-13          # macos, x86_64
          - macos-14          # macos, arm64
          - windows-latest
    steps:
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: wheel
          condarc: |
            channels:
              - conda-forge
              - pytorch
          create-args: >-
            c-compiler
            fortran-compiler
            python=3.${{ matrix.python }}
            git
            python-build
            pkg-config
            cffi
            numpy
            meson-python
            setuptools
            wheel
            xtb=6.7.1
      - uses: actions/checkout@v4
      - run: python -m build --wheel ${{ env.SETUP_ARGS }}
        env:
          SETUP_ARGS: >-
            -Csetup-args=-Dxtb-6.7.1:la_backend=netlib
            -Csetup-args=-Dmctc-lib:json=disabled
        shell: bash -el {0}
      - uses: actions/upload-artifact@v4
        with:
          name: xtbwheel-cp3${{ matrix.python }}-${{ matrix.platform }}.whl
          path: dist/*.whl
          retention-days: 5

  pytests:
    needs:
      - wheels
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python: ['9', '10', '11', '12', '13']
        platform:
          # - ubuntu-24.04-arm  # linux, arm64  Cannot for private repositories
          - ubuntu-latest     # linux, x86_64
          - macos-13          # macos, x86_64
          - macos-14          # macos, arm64
          - windows-latest
    steps:
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: wheel
          condarc: |
            channels:
              - conda-forge
              - pytorch
          create-args: >-
            python=3.${{ matrix.python }}
            cffi
            numpy
            setuptools
            wheel
            pytest
            pytest-cov
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: xtbwheel-cp3${{ matrix.python }}-${{ matrix.platform }}.whl
          path: dist
      - run: python -m pip install dist/xtbwheel-cp3${{ matrix.python }}-${{ matrix.platform }}.whl && pytest -svv
        shell: micromamba-shell {0}

  upload-release-assets:
    needs:
      - wheels
      - sdist
    runs-on: ubuntu-latest
    steps:
      - name: Download files
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist
      - name: Upload assets to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          asset_name: sample.txt
          tag: ${{ github.ref_name }}

  # upload:
  #   needs:
  #     - wheels
  #     - sdist
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         merge-multiple: true
  #         path: dist
  #     - run: python -m pip install twine
  #     - run: python -m twine upload dist/*
  #       env:
  #         TWINE_USERNAME: __token__
  #         TWINE_PASSWORD: ${{ secrets.PYPI }}